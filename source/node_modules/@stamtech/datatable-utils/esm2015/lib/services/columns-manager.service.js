import { DatatableColumn } from "../shared/datatable.column";
export class ColumnsManagerService {
    constructor() {
        this.columns = {};
    }
    addColumn(key, label) {
        this.columns[key] = new DatatableColumn(key, label);
    }
    setVisible(keys, value = true) { keys.forEach(k => { this.columns[k].visible = value; }); }
    setLocked(keys, value = true) { keys.forEach(k => { this.columns[k].locked = value; }); }
    setCustom(keys, value = true) { keys.forEach(k => { this.columns[k].customContent = value; }); }
    setSortable(keys, sortKey = "") { keys.forEach(k => { this.columns[k].sortable = sortKey; }); }
    // Get all columns
    getColumns() {
        return Object.values(this.columns);
    }
    // Get only visible columns
    getDisplayedColumns() {
        return Object.values(this.columns).filter(c => c.visible).map(c => c.key);
    }
    // Get only standard columns ( the content is simply the value )
    getStandardColumns() {
        return Object.values(this.columns).filter(c => !c.customContent);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1ucy1tYW5hZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kYXRhdGFibGUtdXRpbHMvc3JjL2xpYi9zZXJ2aWNlcy9jb2x1bW5zLW1hbmFnZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFN0QsTUFBTSxPQUFPLHFCQUFxQjtJQUc5QjtRQUZRLFlBQU8sR0FBd0MsRUFBRSxDQUFBO0lBRTFDLENBQUM7SUFFaEIsU0FBUyxDQUFDLEdBQVcsRUFBRSxLQUFhO1FBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxlQUFlLENBQUMsR0FBRyxFQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxVQUFVLENBQUMsSUFBYyxFQUFFLEtBQUssR0FBRyxJQUFJLElBQUssSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRyxTQUFTLENBQUMsSUFBYyxFQUFFLEtBQUssR0FBRyxJQUFJLElBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwRyxTQUFTLENBQUMsSUFBYyxFQUFFLEtBQUssR0FBRyxJQUFJLElBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzRyxXQUFXLENBQUMsSUFBYyxFQUFFLE9BQU8sR0FBRyxFQUFFLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUV4RyxrQkFBa0I7SUFDbEIsVUFBVTtRQUNOLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELDJCQUEyQjtJQUMzQixtQkFBbUI7UUFDZixPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELGdFQUFnRTtJQUNoRSxrQkFBa0I7UUFDZCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBEYXRhdGFibGVDb2x1bW4gfSBmcm9tIFwiLi4vc2hhcmVkL2RhdGF0YWJsZS5jb2x1bW5cIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBDb2x1bW5zTWFuYWdlclNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBjb2x1bW5zOiB7IFtpZDogc3RyaW5nXSA6IERhdGF0YWJsZUNvbHVtbjsgfSA9IHt9XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAgIGFkZENvbHVtbihrZXk6IHN0cmluZywgbGFiZWw6IHN0cmluZykgeyBcclxuICAgICAgICB0aGlzLmNvbHVtbnNba2V5XSA9IG5ldyBEYXRhdGFibGVDb2x1bW4oa2V5LGxhYmVsKTsgXHJcbiAgICB9XHJcblxyXG4gICAgc2V0VmlzaWJsZShrZXlzOiBzdHJpbmdbXSwgdmFsdWUgPSB0cnVlKSAgeyBrZXlzLmZvckVhY2goayA9PiB7IHRoaXMuY29sdW1uc1trXS52aXNpYmxlID0gdmFsdWUgfSk7IH1cclxuICAgIHNldExvY2tlZChrZXlzOiBzdHJpbmdbXSwgdmFsdWUgPSB0cnVlKSAgIHsga2V5cy5mb3JFYWNoKGsgPT4geyB0aGlzLmNvbHVtbnNba10ubG9ja2VkID0gdmFsdWUgfSk7IH1cclxuICAgIHNldEN1c3RvbShrZXlzOiBzdHJpbmdbXSwgdmFsdWUgPSB0cnVlKSAgIHsga2V5cy5mb3JFYWNoKGsgPT4geyB0aGlzLmNvbHVtbnNba10uY3VzdG9tQ29udGVudCA9IHZhbHVlIH0pOyB9XHJcbiAgICBzZXRTb3J0YWJsZShrZXlzOiBzdHJpbmdbXSwgc29ydEtleSA9IFwiXCIpIHsga2V5cy5mb3JFYWNoKGsgPT4geyB0aGlzLmNvbHVtbnNba10uc29ydGFibGUgPSBzb3J0S2V5IH0pOyB9XHJcblxyXG4gICAgLy8gR2V0IGFsbCBjb2x1bW5zXHJcbiAgICBnZXRDb2x1bW5zKCkgeyBcclxuICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0aGlzLmNvbHVtbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEdldCBvbmx5IHZpc2libGUgY29sdW1uc1xyXG4gICAgZ2V0RGlzcGxheWVkQ29sdW1ucygpIHsgXHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcy5jb2x1bW5zKS5maWx0ZXIoYyA9PiBjLnZpc2libGUpLm1hcChjID0+IGMua2V5KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBHZXQgb25seSBzdGFuZGFyZCBjb2x1bW5zICggdGhlIGNvbnRlbnQgaXMgc2ltcGx5IHRoZSB2YWx1ZSApXHJcbiAgICBnZXRTdGFuZGFyZENvbHVtbnMoKSB7IFxyXG4gICAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuY29sdW1ucykuZmlsdGVyKGMgPT4gIWMuY3VzdG9tQ29udGVudCk7XHJcbiAgICB9XHJcbn0iXX0=