import { Component, EventEmitter, Input, Output } from '@angular/core';
import { moveItemInArray } from '@angular/cdk/drag-drop';
export class ColumnSelectorComponent {
    constructor() {
        this.menuVisible = false;
        this.columns = [];
        this.columnsChange = new EventEmitter();
        this.selectedColumns = [];
        this.selectedColumnsChange = new EventEmitter();
    }
    ngOnInit() { }
    toggleSelector() {
        this.menuVisible = !this.menuVisible;
    }
    // On backdrop click close the menu and send selectedColumnsChange event
    closeMenu() {
        this.menuVisible = false;
        this.selectedColumnsChange.emit(this.selectedColumns);
    }
    // After drop the array is reordered
    drop(event) {
        const previousColumn = this.columns[event.previousIndex];
        const currentColumn = this.columns[event.currentIndex];
        moveItemInArray(this.columns, event.previousIndex, event.currentIndex);
        const previousSelectIndex = this.selectedColumns.indexOf(previousColumn.key);
        const currentSelectIndex = this.selectedColumns.indexOf(currentColumn.key);
        if (previousSelectIndex != -1 && currentSelectIndex != -1) {
            moveItemInArray(this.selectedColumns, previousSelectIndex, currentSelectIndex);
        }
    }
}
ColumnSelectorComponent.decorators = [
    { type: Component, args: [{
                selector: 'column-selector',
                template: "<button\r\n    mat-icon-button\r\n    color=\"primary\"\r\n    (click)=\"toggleSelector()\"\r\n    cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\">\r\n    <mat-icon aria-label=\"Columns\">view_column</mat-icon>\r\n</button>\r\n<ng-template\r\n  cdkConnectedOverlay\r\n  [cdkConnectedOverlayOrigin]=\"trigger\"\r\n  [cdkConnectedOverlayOpen]=\"menuVisible\"\r\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\r\n  (backdropClick)=\"closeMenu()\">\r\n    <mat-selection-list class=\"column-list mat-elevation-z8\"\r\n        [(ngModel)]=\"selectedColumns\"\r\n        cdkDropList  (cdkDropListDropped)=\"drop($event)\">\r\n        <mat-list-option *ngFor=\"let column of columns\" \r\n            class=\"column-item\" \r\n            checkboxPosition=\"before\"  \r\n            [disabled]=\"column.locked\"\r\n            [value]=\"column.key\"\r\n            cdkDrag>\r\n            <div class=\"columnItem\">\r\n              <span>{{column.label}} </span>\r\n              <mat-icon>drag_handle</mat-icon>\r\n            </div>\r\n          </mat-list-option>\r\n    </mat-selection-list>\r\n</ng-template>\r\n",
                styles: [".column-list{min-width:200px;max-width:100%;border:1px solid #ccc;max-height:350px;display:block;background:#eee;overflow-y:auto}.cdk-drag-preview{display:flex;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.columnItem{display:flex;justify-content:space-between}.columnItem mat-icon{cursor:-webkit-grab;cursor:grab}"]
            },] }
];
ColumnSelectorComponent.ctorParameters = () => [];
ColumnSelectorComponent.propDecorators = {
    columns: [{ type: Input }],
    columnsChange: [{ type: Output }],
    selectedColumns: [{ type: Input }],
    selectedColumnsChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLXNlbGVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RhdGF0YWJsZS11dGlscy9zcmMvbGliL2NvbXBvbmVudHMvY29sdW1uLXNlbGVjdG9yL2NvbHVtbi1zZWxlY3Rvci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQWUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFRdEUsTUFBTSxPQUFPLHVCQUF1QjtJQU1sQztRQUxBLGdCQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ1gsWUFBTyxHQUFzQixFQUFFLENBQUM7UUFDL0Isa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBcUIsQ0FBQztRQUN2RCxvQkFBZSxHQUFhLEVBQUUsQ0FBQztRQUM5QiwwQkFBcUIsR0FBRyxJQUFJLFlBQVksRUFBWSxDQUFDO0lBQy9DLENBQUM7SUFFakIsUUFBUSxLQUFXLENBQUM7SUFFcEIsY0FBYztRQUNaLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCx3RUFBd0U7SUFDeEUsU0FBUztRQUNMLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFRCxvQ0FBb0M7SUFDcEMsSUFBSSxDQUFDLEtBQTRCO1FBQy9CLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3ZELGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3ZFLE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdFLE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzNFLElBQUksbUJBQW1CLElBQUUsQ0FBQyxDQUFDLElBQUksa0JBQWtCLElBQUUsQ0FBQyxDQUFDLEVBQUU7WUFDckQsZUFBZSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztTQUNoRjtJQUNILENBQUM7OztZQW5DRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsZ21DQUErQzs7YUFFaEQ7Ozs7c0JBR0UsS0FBSzs0QkFDTCxNQUFNOzhCQUNOLEtBQUs7b0NBQ0wsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ2RrRHJhZ0Ryb3AsIG1vdmVJdGVtSW5BcnJheSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9kcmFnLWRyb3AnO1xyXG5pbXBvcnQgeyBEYXRhdGFibGVDb2x1bW4gfSBmcm9tICcuLi8uLi9zaGFyZWQvZGF0YXRhYmxlLmNvbHVtbic7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2NvbHVtbi1zZWxlY3RvcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbHVtbi1zZWxlY3Rvci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY29sdW1uLXNlbGVjdG9yLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIENvbHVtblNlbGVjdG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBtZW51VmlzaWJsZSA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIGNvbHVtbnM6IERhdGF0YWJsZUNvbHVtbltdID0gW107XHJcbiAgQE91dHB1dCgpIGNvbHVtbnNDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPERhdGF0YWJsZUNvbHVtbltdPigpO1xyXG4gIEBJbnB1dCgpIHNlbGVjdGVkQ29sdW1uczogc3RyaW5nW10gPSBbXTtcclxuICBAT3V0cHV0KCkgc2VsZWN0ZWRDb2x1bW5zQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmdbXT4oKTtcclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHsgfVxyXG5cclxuICB0b2dnbGVTZWxlY3RvcigpIHtcclxuICAgIHRoaXMubWVudVZpc2libGUgPSAhdGhpcy5tZW51VmlzaWJsZTtcclxuICB9XHJcblxyXG4gIC8vIE9uIGJhY2tkcm9wIGNsaWNrIGNsb3NlIHRoZSBtZW51IGFuZCBzZW5kIHNlbGVjdGVkQ29sdW1uc0NoYW5nZSBldmVudFxyXG4gIGNsb3NlTWVudSgpIHtcclxuICAgICAgdGhpcy5tZW51VmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICB0aGlzLnNlbGVjdGVkQ29sdW1uc0NoYW5nZS5lbWl0KHRoaXMuc2VsZWN0ZWRDb2x1bW5zKTtcclxuICB9XHJcblxyXG4gIC8vIEFmdGVyIGRyb3AgdGhlIGFycmF5IGlzIHJlb3JkZXJlZFxyXG4gIGRyb3AoZXZlbnQ6IENka0RyYWdEcm9wPHN0cmluZ1tdPikge1xyXG4gICAgY29uc3QgcHJldmlvdXNDb2x1bW4gPSB0aGlzLmNvbHVtbnNbZXZlbnQucHJldmlvdXNJbmRleF07XHJcbiAgICBjb25zdCBjdXJyZW50Q29sdW1uID0gdGhpcy5jb2x1bW5zW2V2ZW50LmN1cnJlbnRJbmRleF07XHJcbiAgICBtb3ZlSXRlbUluQXJyYXkodGhpcy5jb2x1bW5zLCBldmVudC5wcmV2aW91c0luZGV4LCBldmVudC5jdXJyZW50SW5kZXgpO1xyXG4gICAgY29uc3QgcHJldmlvdXNTZWxlY3RJbmRleCA9IHRoaXMuc2VsZWN0ZWRDb2x1bW5zLmluZGV4T2YocHJldmlvdXNDb2x1bW4ua2V5KTtcclxuICAgIGNvbnN0IGN1cnJlbnRTZWxlY3RJbmRleCA9IHRoaXMuc2VsZWN0ZWRDb2x1bW5zLmluZGV4T2YoY3VycmVudENvbHVtbi5rZXkpO1xyXG4gICAgaWYgKHByZXZpb3VzU2VsZWN0SW5kZXghPS0xICYmIGN1cnJlbnRTZWxlY3RJbmRleCE9LTEpIHtcclxuICAgICAgbW92ZUl0ZW1JbkFycmF5KHRoaXMuc2VsZWN0ZWRDb2x1bW5zLCBwcmV2aW91c1NlbGVjdEluZGV4LCBjdXJyZW50U2VsZWN0SW5kZXgpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=