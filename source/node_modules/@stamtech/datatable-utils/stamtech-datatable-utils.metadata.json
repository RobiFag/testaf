{"__symbolic":"module","version":4,"metadata":{"ColumnSelectorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"column-selector","template":"<button\r\n    mat-icon-button\r\n    color=\"primary\"\r\n    (click)=\"toggleSelector()\"\r\n    cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\">\r\n    <mat-icon aria-label=\"Columns\">view_column</mat-icon>\r\n</button>\r\n<ng-template\r\n  cdkConnectedOverlay\r\n  [cdkConnectedOverlayOrigin]=\"trigger\"\r\n  [cdkConnectedOverlayOpen]=\"menuVisible\"\r\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\r\n  (backdropClick)=\"closeMenu()\">\r\n    <mat-selection-list class=\"column-list mat-elevation-z8\"\r\n        [(ngModel)]=\"selectedColumns\"\r\n        cdkDropList  (cdkDropListDropped)=\"drop($event)\">\r\n        <mat-list-option *ngFor=\"let column of columns\" \r\n            class=\"column-item\" \r\n            checkboxPosition=\"before\"  \r\n            [disabled]=\"column.locked\"\r\n            [value]=\"column.key\"\r\n            cdkDrag>\r\n            <div class=\"columnItem\">\r\n              <span>{{column.label}} </span>\r\n              <mat-icon>drag_handle</mat-icon>\r\n            </div>\r\n          </mat-list-option>\r\n    </mat-selection-list>\r\n</ng-template>\r\n","styles":[".column-list{min-width:200px;max-width:100%;border:1px solid #ccc;max-height:350px;display:block;background:#eee;overflow-y:auto}.cdk-drag-preview{display:flex;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.columnItem{display:flex;justify-content:space-between}.columnItem mat-icon{cursor:-webkit-grab;cursor:grab}"]}]}],"members":{"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"columnsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":12,"character":3}}]}],"selectedColumns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"selectedColumnsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"toggleSelector":[{"__symbolic":"method"}],"closeMenu":[{"__symbolic":"method"}],"drop":[{"__symbolic":"method"}]}},"ChipsFilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"stam-chips-filter","template":"<div class=\"infobox-container\" *ngIf=\"chips.length\">\r\n    <div class=\"mat-header-cell filter-header-label\" >Filtri attivi : </div>\r\n    <mat-chip-list>\r\n        <mat-chip *ngFor=\"let chip of chips\" \r\n            color=\"primary\"\r\n            selected=\"true\"\r\n            (removed)=\"clear(chip.key)\">\r\n            <mat-icon matChipRemove>cancel</mat-icon>\r\n            {{chip.label}} <span class=\"chipValue\">{{chip.value}}</span>\r\n        </mat-chip>\r\n    </mat-chip-list>\r\n    <div class=\"action-container\">\r\n        <button mat-button color=\"accent\" (click)=\"clearFilters()\">Cancella filtri</button>\r\n    </div>\r\n</div>\r\n\r\n","styles":[".infobox-container{display:flex;align-items:center;min-height:56px;width:100%;background:#fff;border-bottom:1px solid rgba(0,0,0,.12)}.infobox-container .filter-header-label{width:8em;margin:0 24px}.infobox-container mat-chip-list{flex-grow:1;margin:1em 0}.infobox-container mat-chip-list .chipValue{background-color:hsla(0,0%,100%,.5);padding:7px 16px;border-radius:16px;margin-left:8px;margin-right:-12px;line-height:19px;max-width:8em;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.infobox-container mat-chip-list mat-icon{margin-left:0!important;margin-right:8px!important}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ColumnFilterService"}]}],"clear":[{"__symbolic":"method"}],"clearFilters":[{"__symbolic":"method"}]}},"DialogFilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"app-dialog-filter","styles":[".mat-form-field { width: 100% }"],"template":"<h2 mat-dialog-title>Filtri</h2>\r\n<div mat-dialog-content>\r\n    <form [formGroup]=\"filtersForm\">        \r\n        <div *ngFor=\"let filter of filterSet.filters | keyvalue\">\r\n            <ng-container [ngSwitch]=\"filter.value.type\">\r\n                <ng-container *ngSwitchCase=\"'TEXT'\">\r\n                    <mat-form-field>\r\n                        <mat-label>{{ filter.value.label }}</mat-label>\r\n                        <input matInput [formControlName]=\"filter.key\">\r\n                    </mat-form-field>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase=\"'SELECT'\">\r\n                    <mat-form-field>\r\n                        <mat-label>{{ filter.value.label }}</mat-label>\r\n                        <mat-select [formControlName]=\"filter.key\">\r\n                            <mat-option [value]=\"\">---</mat-option> \r\n                            <mat-option *ngFor=\"let opt of filter.value.options\" [value]=\"opt.id\">\r\n                                {{ opt.label }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase=\"'DATE'\">\r\n                    <mat-form-field>\r\n                        <mat-label>{{ filter.value.label }}</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker\" [formControlName]=\"filter.key\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                    </mat-form-field>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </form>\r\n</div>\r\n<mat-dialog-actions align=\"end\">\r\n    <button class=\"clear-filters-button\" mat-raised-button (click)=\"clearFilters()\">Reset</button>\r\n    <button class=\"search-filters-button\" mat-raised-button color=\"primary\" (click)=\"search()\">Ricerca</button>\r\n</mat-dialog-actions>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":17,"character":15},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":17,"character":22}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"DialogFilterComponent"}]},{"__symbolic":"reference","name":"any"}]}],"clearFilters":[{"__symbolic":"method"}],"search":[{"__symbolic":"method"}]}},"ColumnsManagerService":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"addColumn":[{"__symbolic":"method"}],"setVisible":[{"__symbolic":"method"}],"setLocked":[{"__symbolic":"method"}],"setCustom":[{"__symbolic":"method"}],"setSortable":[{"__symbolic":"method"}],"getColumns":[{"__symbolic":"method"}],"getDisplayedColumns":[{"__symbolic":"method"}],"getStandardColumns":[{"__symbolic":"method"}]}},"ColumnFilterService":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"emitFilters":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"removeFilter":[{"__symbolic":"method"}],"setFilter":[{"__symbolic":"method"}],"clearFilter":[{"__symbolic":"method"}],"updateFilters":[{"__symbolic":"method"}],"isActive":[{"__symbolic":"method"}],"disableFilter":[{"__symbolic":"method"}],"enableFilter":[{"__symbolic":"method"}],"clearFilters":[{"__symbolic":"method"}],"setPage":[{"__symbolic":"method"}],"setLimit":[{"__symbolic":"method"}],"setSort":[{"__symbolic":"method"}]}},"DatatableService":{"__symbolic":"interface"},"RowsResponse":{"__symbolic":"class","arity":1,"members":{}},"Filter":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"},{"__symbolic":"error","message":"Could not resolve type","line":10,"character":50,"context":{"typeName":"FilterType"},"module":"./lib/shared/datatable.types"},{"__symbolic":"reference","name":"Array","arguments":[{"__symbolic":"error","message":"Expression form not supported","line":10,"character":72,"module":"./lib/shared/datatable.types"}]}]}]}},"FilterType":{"TEXT":"TEXT","SELECT":"SELECT","DATE":"DATE"},"FilterOption":{"__symbolic":"interface"},"FilterSet":{"__symbolic":"class","members":{"find":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}],"isActive":[{"__symbolic":"method"}],"clear":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"getActiveFilters":[{"__symbolic":"method"}],"getParams":[{"__symbolic":"method"}],"setSort":[{"__symbolic":"method"}],"resetPage":[{"__symbolic":"method"}]}},"DatatableDatasource":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"DatatableService"}]}],"connect":[{"__symbolic":"method"}],"disconnect":[{"__symbolic":"method"}],"loadData":[{"__symbolic":"method"}]}},"DatatableColumn":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"}]}]}},"StamDatatableModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":26,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ColumnSelectorComponent"},{"__symbolic":"reference","name":"DialogFilterComponent"},{"__symbolic":"reference","name":"ChipsFilterComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":33,"character":4},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":34,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":35,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":36,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":37,"character":4},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":38,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":39,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":41,"character":4},{"__symbolic":"reference","module":"@angular/cdk/overlay","name":"OverlayModule","line":44,"character":4},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":45,"character":4},{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginatorModule","line":46,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":47,"character":4},{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"DragDropModule","line":48,"character":4},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":49,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":50,"character":4},{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSortModule","line":51,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":52,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":53,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":54,"character":4}],"exports":[{"__symbolic":"reference","name":"ColumnSelectorComponent"},{"__symbolic":"reference","name":"DialogFilterComponent"},{"__symbolic":"reference","name":"ChipsFilterComponent"}]}]}],"members":{}}},"origins":{"ColumnSelectorComponent":"./lib/components/column-selector/column-selector.component","ChipsFilterComponent":"./lib/components/chips-filter/chips-filter.component","DialogFilterComponent":"./lib/components/dialog-filter/dialog-filter.component","ColumnsManagerService":"./lib/services/columns-manager.service","ColumnFilterService":"./lib/services/column-filter.service","DatatableService":"./lib/services/datatable.service.interface","RowsResponse":"./lib/services/datatable.service.interface","Filter":"./lib/shared/datatable.types","FilterType":"./lib/shared/datatable.types","FilterOption":"./lib/shared/datatable.types","FilterSet":"./lib/shared/datatable.types","DatatableDatasource":"./lib/shared/datatable.datasource","DatatableColumn":"./lib/shared/datatable.column","StamDatatableModule":"./lib/datatable-utils.module"},"importAs":"@stamtech/datatable-utils"}