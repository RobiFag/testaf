{"version":3,"file":"stamtech-datatable-utils.js","sources":["../../../projects/datatable-utils/src/lib/components/column-selector/column-selector.component.ts","../../../projects/datatable-utils/src/lib/shared/datatable.types.ts","../../../projects/datatable-utils/src/lib/services/column-filter.service.ts","../../../projects/datatable-utils/src/lib/components/chips-filter/chips-filter.component.ts","../../../projects/datatable-utils/src/lib/components/dialog-filter/dialog-filter.component.ts","../../../projects/datatable-utils/src/lib/shared/datatable.column.ts","../../../projects/datatable-utils/src/lib/services/columns-manager.service.ts","../../../projects/datatable-utils/src/lib/services/datatable.service.interface.ts","../../../projects/datatable-utils/src/lib/shared/datatable.datasource.ts","../../../projects/datatable-utils/src/lib/datatable-utils.module.ts","../../../projects/datatable-utils/src/public-api.ts","../../../projects/datatable-utils/src/stamtech-datatable-utils.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { DatatableColumn } from '../../shared/datatable.column';\r\n\r\n@Component({\r\n  selector: 'column-selector',\r\n  templateUrl: './column-selector.component.html',\r\n  styleUrls: ['./column-selector.component.scss']\r\n})\r\nexport class ColumnSelectorComponent implements OnInit {\r\n  menuVisible = false;\r\n  @Input() columns: DatatableColumn[] = [];\r\n  @Output() columnsChange = new EventEmitter<DatatableColumn[]>();\r\n  @Input() selectedColumns: string[] = [];\r\n  @Output() selectedColumnsChange = new EventEmitter<string[]>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  toggleSelector() {\r\n    this.menuVisible = !this.menuVisible;\r\n  }\r\n\r\n  // On backdrop click close the menu and send selectedColumnsChange event\r\n  closeMenu() {\r\n      this.menuVisible = false;\r\n      this.selectedColumnsChange.emit(this.selectedColumns);\r\n  }\r\n\r\n  // After drop the array is reordered\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    const previousColumn = this.columns[event.previousIndex];\r\n    const currentColumn = this.columns[event.currentIndex];\r\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n    const previousSelectIndex = this.selectedColumns.indexOf(previousColumn.key);\r\n    const currentSelectIndex = this.selectedColumns.indexOf(currentColumn.key);\r\n    if (previousSelectIndex!=-1 && currentSelectIndex!=-1) {\r\n      moveItemInArray(this.selectedColumns, previousSelectIndex, currentSelectIndex);\r\n    }\r\n  }\r\n}\r\n","import { HttpParams } from \"@angular/common/http\";\r\n\r\nexport class Filter {\r\n    key: string;\r\n    label: string;\r\n    type: FilterType;\r\n    options?: FilterOption[];\r\n    value?: any = null;\r\n    disabled?: boolean = false;\r\n\r\n    constructor(key: string, label: string, type: FilterType, options?: (string | FilterOption)[]) {\r\n        this.key = key;\r\n        this.label = label;\r\n        this.type = type;\r\n\r\n        if (options)\r\n            this.options = options.map((value : string | FilterOption) => {\r\n                if (typeof value === 'string') {\r\n                    return { id: value, label: value}\r\n                }\r\n                return value;\r\n            })\r\n    }\r\n}\r\n\r\nexport enum FilterType {\r\n    TEXT = \"TEXT\",\r\n    SELECT = \"SELECT\",\r\n    DATE = \"DATE\"\r\n}\r\n\r\nexport type FilterOption = { id:string | number, label:string }\r\n\r\n/**\r\n * Track the current datatable filter status with :\r\n * - an array of applicable filters with their value\r\n * - the current pagination status\r\n * - the current sort field\r\n */\r\nexport class FilterSet {\r\n    // Applicable filters\r\n    filters: {[id: string]: Filter} = {}\r\n\r\n    // Pagination\r\n    limit: number = 10;\r\n    page: number = null; // Zero based\r\n    \r\n    // Sorting\r\n    sortField: string = null;\r\n    sortDirection: string = 'Desc';\r\n    \r\n\r\n    find(key) { return this.filters[key]; }\r\n\r\n    add(filter: Filter) { this.filters[filter.key] = filter; }\r\n\r\n    remove(key:string) { delete this.filters[key]; }\r\n\r\n    isActive() { return this.getActiveFilters().length>0; }\r\n\r\n    clear() { \r\n        Object.keys(this.filters).forEach(key => {\r\n            this.filters[key].value = null;\r\n        })\r\n    }\r\n\r\n    reset() { this.filters = {}; }\r\n\r\n\r\n    getActiveFilters() {\r\n        return Object.values(this.filters).filter(f => (f.value!==null && f.value!==undefined))\r\n    }\r\n\r\n    getParams(): HttpParams {\r\n        console.log(this)\r\n        let params = new HttpParams();\r\n        if (this.page !== null) {\r\n            params = params.append('page', this.page.toString());\r\n            params = params.append('limit', this.limit.toString());\r\n        }\r\n        if (this.sortField) {\r\n            params = params.append('sort', this.sortField.toString());\r\n            params = params.append('direction', this.sortDirection.toString());\r\n        }\r\n        if (this.filters) {\r\n            this.getActiveFilters().forEach((filter: Filter) => \r\n                params = params.append(filter.key, filter.value)\r\n            );\r\n        }\r\n        return params;\r\n    }\r\n\r\n    setSort(field, direction) {\r\n        this.sortField = field;\r\n        this.sortDirection = direction;\r\n        this.resetPage();\r\n    }\r\n\r\n    resetPage() { \r\n        if (this.page) this.page = 0;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Filter, FilterOption, FilterSet, FilterType } from '../shared/datatable.types';\r\n\r\nexport class ColumnFilterService {\r\n  \r\n  private filterSet = new FilterSet();\r\n  private filterSetSubject = new BehaviorSubject<FilterSet>(this.filterSet);\r\n  filterSet$ = this.filterSetSubject.asObservable();\r\n  \r\n  constructor() { }\r\n\r\n  emitFilters() { this.filterSetSubject.next(this.filterSet); }\r\n\r\n  // Filters methods  \r\n  addFilter(key: string, label: string, type: FilterType, options?: (string | FilterOption)[]) {\r\n    this.filterSet.add(new Filter(key, label, type, options));\r\n    this.emitFilters();\r\n  }\r\n\r\n  removeFilter(key: string) {  \r\n    this.filterSet.remove(key);   \r\n    this.emitFilters();\r\n  }\r\n\r\n  setFilter(key: string, value: any) {\r\n    let filter = this.filterSet.find(key);\r\n    if (filter) {\r\n      filter.value = value;\r\n      this.emitFilters();\r\n    }\r\n  }\r\n\r\n  clearFilter(key: string) {  this.setFilter(key, null);   }\r\n\r\n  updateFilters(filterSet: FilterSet) { \r\n    this.filterSet = filterSet;\r\n    this.emitFilters();\r\n  }\r\n\r\n  isActive(): boolean { \r\n    return this.filterSet.isActive() \r\n  }\r\n\r\n  disableFilter(key: string) {\r\n    let filter = this.filterSet.find(key);\r\n    if (filter) {\r\n      filter.disabled = true;\r\n      this.emitFilters();\r\n    }\r\n  }\r\n\r\n  enableFilter(key: string) {\r\n    let filter = this.filterSet.find(key);\r\n    if (filter) {\r\n      filter.disabled = false;\r\n      this.emitFilters();\r\n    }\r\n  }\r\n\r\n  clearFilters() { \r\n    this.filterSet.clear(); \r\n    this.emitFilters();\r\n  }\r\n\r\n  // Paging methods\r\n  setPage(page:number, limit?:number) { \r\n    this.filterSet.page = page; \r\n    if (limit) this.filterSet.limit = limit; \r\n    this.emitFilters();\r\n  }\r\n\r\n  setLimit(limit:number) { \r\n    this.filterSet.limit = limit; \r\n    this.emitFilters();\r\n  }\r\n\r\n  // Sorting methods\r\n  setSort(field, direction) {\r\n    this.filterSet.sortField = field;\r\n    this.filterSet.sortDirection = direction;\r\n    this.emitFilters();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ColumnFilterService } from '../../services/column-filter.service';\r\nimport { Filter } from '../../shared/datatable.types';\r\n\r\n\r\n@Component({\r\n  selector: 'stam-chips-filter',\r\n  templateUrl: './chips-filter.component.html',\r\n  styleUrls: ['./chips-filter.component.scss']\r\n})\r\nexport class ChipsFilterComponent {\r\n  chips: Filter[] = [];\r\n  constructor(private filtersService: ColumnFilterService) { \r\n    this.filtersService.filterSet$\r\n      .subscribe(filterSet => this.chips = filterSet.getActiveFilters());\r\n  }\r\n\r\n  clear(key: string) { this.filtersService.clearFilter(key); }\r\n  clearFilters() { this.filtersService.clearFilters(); }\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ColumnFilterService } from '../../services/column-filter.service';\r\nimport { FilterSet } from '../../shared/datatable.types';\r\n\r\n@Component({\r\n  selector: 'app-dialog-filter',\r\n  templateUrl: './dialog-filter.component.html',\r\n  styles: [ \".mat-form-field { width: 100% }\"]\r\n})\r\nexport class DialogFilterComponent {\r\n  filterSet: FilterSet;\r\n  filtersForm = new FormGroup({});\r\n  filtersService: ColumnFilterService;\r\n\r\n  constructor(private dialog: MatDialogRef<DialogFilterComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.filtersService = data.filtersService;\r\n    this.filtersService.filterSet$.subscribe(filterSet => {\r\n      this.filterSet = filterSet;\r\n      Object.keys(this.filterSet.filters).forEach(key => \r\n        this.filtersForm.addControl(key, new FormControl({ value: this.filterSet.filters[key].value, disabled: this.filterSet.filters[key].disabled})));\r\n    });\r\n  }\r\n\r\n  clearFilters() {\r\n    this.filtersForm.reset();\r\n  }\r\n\r\n  search() {\r\n    Object.keys(this.filtersForm.controls).forEach(control => {\r\n      const filter = this.filterSet.find(control);\r\n      if (filter)\r\n        filter.value = this.filtersForm.controls[control].value;\r\n    });\r\n    this.filterSet.resetPage()\r\n    this.filtersService.updateFilters(this.filterSet);\r\n    this.dialog.close();\r\n  }\r\n\r\n}","export class DatatableColumn {\r\n    key: string;\r\n    label: string;\r\n\r\n    // Visible status on table first render\r\n    visible?: boolean;\r\n\r\n    // Key for sorting on backend\r\n    sortable?: string;\r\n\r\n    // Disabled in column selector \r\n    locked?: boolean;\r\n\r\n    // Skipped if is content is rendered in a custom ng-template\r\n    customContent?: boolean;\r\n\r\n    constructor(key: string, label: string) {\r\n        this.key = key;\r\n        this.label = label;\r\n        this.visible = true;\r\n        this.locked = false;\r\n        this.customContent = false;\r\n        this.sortable = key;\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { DatatableColumn } from \"../shared/datatable.column\";\r\n\r\nexport class ColumnsManagerService {\r\n    private columns: { [id: string] : DatatableColumn; } = {}\r\n\r\n    constructor() {}\r\n\r\n    addColumn(key: string, label: string) { \r\n        this.columns[key] = new DatatableColumn(key,label); \r\n    }\r\n\r\n    setVisible(keys: string[], value = true)  { keys.forEach(k => { this.columns[k].visible = value }); }\r\n    setLocked(keys: string[], value = true)   { keys.forEach(k => { this.columns[k].locked = value }); }\r\n    setCustom(keys: string[], value = true)   { keys.forEach(k => { this.columns[k].customContent = value }); }\r\n    setSortable(keys: string[], sortKey = \"\") { keys.forEach(k => { this.columns[k].sortable = sortKey }); }\r\n\r\n    // Get all columns\r\n    getColumns() { \r\n        return Object.values(this.columns);\r\n    }\r\n\r\n    // Get only visible columns\r\n    getDisplayedColumns() { \r\n        return Object.values(this.columns).filter(c => c.visible).map(c => c.key);\r\n    }\r\n\r\n    // Get only standard columns ( the content is simply the value )\r\n    getStandardColumns() { \r\n        return Object.values(this.columns).filter(c => !c.customContent);\r\n    }\r\n}","import { Observable } from \"rxjs\";\r\nimport { FilterSet } from \"../shared/datatable.types\";\r\n\r\nexport interface DatatableService<T> {\r\n    findAll(filterSet: FilterSet): Observable<RowsResponse<T>>\r\n}\r\n\r\nexport class RowsResponse<T> {\r\n    content: T[] = []\r\n    totalElements: number = 0;\r\n}","import { CollectionViewer, DataSource } from \"@angular/cdk/collections\"\r\nimport { BehaviorSubject, Observable, of } from \"rxjs\";\r\nimport { catchError, finalize } from \"rxjs/operators\";\r\nimport { FilterSet } from \"./datatable.types\";\r\nimport { DatatableService, RowsResponse } from \"../services/datatable.service.interface\";\r\n\r\n\r\nexport class DatatableDatasource<T> implements DataSource<T> {\r\n    private rows = new BehaviorSubject<T[]>([]);\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n    public loading$ = this.loadingSubject.asObservable();\r\n    private countSubject = new BehaviorSubject<number>(0);\r\n    public counter$ = this.countSubject.asObservable();\r\n    \r\n    constructor(private rowsService: DatatableService<T>) { }\r\n    \r\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\r\n        return this.rows.asObservable();\r\n    }\r\n\r\n    disconnect(collectionViewer: CollectionViewer): void {\r\n        this.rows.complete();\r\n        this.loadingSubject.complete();\r\n        this.countSubject.complete();\r\n    }\r\n\r\n    loadData(filterSet: FilterSet) {\r\n        this.loadingSubject.next(true);\r\n        this.rowsService.findAll(filterSet)\r\n            .pipe(\r\n                catchError(() => of(new RowsResponse<T>())),\r\n                finalize(() => this.loadingSubject.next(false))\r\n            )\r\n            .subscribe((result: RowsResponse<T>) => {\r\n                this.rows.next(result.content);\r\n                this.countSubject.next(result.totalElements);\r\n            });\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\n\r\nimport { ChipsFilterComponent } from './components/chips-filter/chips-filter.component';\r\nimport { DialogFilterComponent } from './components/dialog-filter/dialog-filter.component';\r\nimport { ColumnSelectorComponent } from './components/column-selector/column-selector.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ColumnSelectorComponent, \r\n    DialogFilterComponent, \r\n    ChipsFilterComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    //MatBadgeModule,\r\n    MatButtonModule,\r\n    //MatTooltipModule,\r\n    //MatToolbarModule,\r\n    OverlayModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSelectModule,\r\n    DragDropModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatChipsModule,\r\n    MatProgressBarModule\r\n  ],\r\n  exports: [\r\n    ColumnSelectorComponent,\r\n    DialogFilterComponent,\r\n    ChipsFilterComponent\r\n  ]\r\n})\r\nexport class StamDatatableModule { }\r\n","/*\r\n * Public API Surface of datatable-utils\r\n */\r\n\r\nexport * from './lib/components/column-selector/column-selector.component';\r\nexport * from './lib/components/chips-filter/chips-filter.component';\r\nexport * from './lib/components/dialog-filter/dialog-filter.component';\r\nexport * from './lib/services/columns-manager.service';\r\nexport * from './lib/services/column-filter.service';\r\nexport * from './lib/services/datatable.service.interface';\r\nexport * from './lib/shared/datatable.types';\r\nexport * from './lib/shared/datatable.datasource';\r\nexport * from './lib/shared/datatable.column';\r\nexport * from './lib/datatable-utils.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;MASa,uBAAuB;IAMlC;QALA,gBAAW,GAAG,KAAK,CAAC;QACX,YAAO,GAAsB,EAAE,CAAC;QAC/B,kBAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;QACvD,oBAAe,GAAa,EAAE,CAAC;QAC9B,0BAAqB,GAAG,IAAI,YAAY,EAAY,CAAC;KAC9C;IAEjB,QAAQ,MAAY;IAEpB,cAAc;QACZ,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;KACtC;;IAGD,SAAS;QACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACzD;;IAGD,IAAI,CAAC,KAA4B;QAC/B,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACzD,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACvD,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QACvE,MAAM,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC7E,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC3E,IAAI,mBAAmB,IAAE,CAAC,CAAC,IAAI,kBAAkB,IAAE,CAAC,CAAC,EAAE;YACrD,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;SAChF;KACF;;;YAnCF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,gmCAA+C;;aAEhD;;;;sBAGE,KAAK;4BACL,MAAM;8BACN,KAAK;oCACL,MAAM;;;MCZI,MAAM;IAQf,YAAY,GAAW,EAAE,KAAa,EAAE,IAAgB,EAAE,OAAmC;QAH7F,UAAK,GAAS,IAAI,CAAC;QACnB,aAAQ,GAAa,KAAK,CAAC;QAGvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,OAAO;YACP,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,KAA6B;gBACrD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,CAAA;iBACpC;gBACD,OAAO,KAAK,CAAC;aAChB,CAAC,CAAA;KACT;CACJ;IAEW;AAAZ,WAAY,UAAU;IAClB,2BAAa,CAAA;IACb,+BAAiB,CAAA;IACjB,2BAAa,CAAA;AACjB,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB;AAID;;;;;;MAMa,SAAS;IAAtB;;QAEI,YAAO,GAA2B,EAAE,CAAA;;QAGpC,UAAK,GAAW,EAAE,CAAC;QACnB,SAAI,GAAW,IAAI,CAAC;;QAGpB,cAAS,GAAW,IAAI,CAAC;QACzB,kBAAa,GAAW,MAAM,CAAC;KAoDlC;IAjDG,IAAI,CAAC,GAAG,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;IAEvC,GAAG,CAAC,MAAc,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE;IAE1D,MAAM,CAAC,GAAU,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;IAEhD,QAAQ,KAAK,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,MAAM,GAAC,CAAC,CAAC,EAAE;IAEvD,KAAK;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG;YACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;SAClC,CAAC,CAAA;KACL;IAED,KAAK,KAAK,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE;IAG9B,gBAAgB;QACZ,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,KAAG,IAAI,IAAI,CAAC,CAAC,KAAK,KAAG,SAAS,CAAC,CAAC,CAAA;KAC1F;IAED,SAAS;QACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACjB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACpB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACrD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC1D;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACtE;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,CAAC,MAAc,KAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CACnD,CAAC;SACL;QACD,OAAO,MAAM,CAAC;KACjB;IAED,OAAO,CAAC,KAAK,EAAE,SAAS;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;KACpB;IAED,SAAS;QACL,IAAI,IAAI,CAAC,IAAI;YAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KAChC;;;MChGQ,mBAAmB;IAM9B;QAJQ,cAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAC5B,qBAAgB,GAAG,IAAI,eAAe,CAAY,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1E,eAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;KAEjC;IAEjB,WAAW,KAAK,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE;;IAG7D,SAAS,CAAC,GAAW,EAAE,KAAa,EAAE,IAAgB,EAAE,OAAmC;QACzF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,YAAY,CAAC,GAAW;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,SAAS,CAAC,GAAW,EAAE,KAAU;QAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAED,WAAW,CAAC,GAAW,IAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAI;IAE1D,aAAa,CAAC,SAAoB;QAChC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAA;KACjC;IAED,aAAa,CAAC,GAAW;QACvB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAED,YAAY,CAAC,GAAW;QACtB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAED,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;IAGD,OAAO,CAAC,IAAW,EAAE,KAAa;QAChC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,KAAK;YAAE,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QACxC,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;IAGD,OAAO,CAAC,KAAK,EAAE,SAAS;QACtB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC;QACzC,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;MCvEU,oBAAoB;IAE/B,YAAoB,cAAmC;QAAnC,mBAAc,GAAd,cAAc,CAAqB;QADvD,UAAK,GAAa,EAAE,CAAC;QAEnB,IAAI,CAAC,cAAc,CAAC,UAAU;aAC3B,SAAS,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;KACtE;IAED,KAAK,CAAC,GAAW,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;IAC5D,YAAY,KAAK,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,EAAE;;;YAbvD,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,irBAA4C;;aAE7C;;;YARQ,mBAAmB;;;MCSf,qBAAqB;IAKhC,YAAoB,MAA2C,EACnB,IAAS;QADjC,WAAM,GAAN,MAAM,CAAqC;QACnB,SAAI,GAAJ,IAAI,CAAK;QAJrD,gBAAW,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAK9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS;YAChD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,IAC7C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC,CAAC;SACnJ,CAAC,CAAC;KACJ;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KAC1B;IAED,MAAM;QACJ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO;YACpD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,MAAM;gBACR,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;SAC3D,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAA;QAC1B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;KACrB;;;YAjCF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,kkEAA6C;yBACnC,iCAAiC;aAC5C;;;YARQ,YAAY;4CAeN,MAAM,SAAC,eAAe;;;MCjBxB,eAAe;IAgBxB,YAAY,GAAW,EAAE,KAAa;QAClC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACvB;;;MCpBQ,qBAAqB;IAG9B;QAFQ,YAAO,GAAwC,EAAE,CAAA;KAEzC;IAEhB,SAAS,CAAC,GAAW,EAAE,KAAa;QAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,eAAe,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC;KACtD;IAED,UAAU,CAAC,IAAc,EAAE,KAAK,GAAG,IAAI,IAAK,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAA,EAAE,CAAC,CAAC,EAAE;IACrG,SAAS,CAAC,IAAc,EAAE,KAAK,GAAG,IAAI,IAAM,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAA,EAAE,CAAC,CAAC,EAAE;IACpG,SAAS,CAAC,IAAc,EAAE,KAAK,GAAG,IAAI,IAAM,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAA,EAAE,CAAC,CAAC,EAAE;IAC3G,WAAW,CAAC,IAAc,EAAE,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAA,EAAE,CAAC,CAAC,EAAE;;IAGxG,UAAU;QACN,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtC;;IAGD,mBAAmB;QACf,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KAC7E;;IAGD,kBAAkB;QACd,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;KACpE;;;MCvBQ,YAAY;IAAzB;QACI,YAAO,GAAQ,EAAE,CAAA;QACjB,kBAAa,GAAW,CAAC,CAAC;KAC7B;;;MCHY,mBAAmB;IAO5B,YAAoB,WAAgC;QAAhC,gBAAW,GAAX,WAAW,CAAqB;QAN5C,SAAI,GAAG,IAAI,eAAe,CAAM,EAAE,CAAC,CAAC;QACpC,mBAAc,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC7C,iBAAY,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;QAC/C,aAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KAEM;IAEzD,OAAO,CAAC,gBAAkC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KACnC;IAED,UAAU,CAAC,gBAAkC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAChC;IAED,QAAQ,CAAC,SAAoB;QACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC;aAC9B,IAAI,CACD,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,YAAY,EAAK,CAAC,CAAC,EAC3C,QAAQ,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAClD;aACA,SAAS,CAAC,CAAC,MAAuB;YAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SAChD,CAAC,CAAC;KACV;;;MCyBQ,mBAAmB;;;YApC/B,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,uBAAuB;oBACvB,qBAAqB;oBACrB,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,YAAY;oBACZ,mBAAmB;oBACnB,cAAc;oBACd,WAAW;oBACX,mBAAmB;oBACnB,aAAa;oBACb,aAAa;;oBAEb,eAAe;;;oBAGf,aAAa;oBACb,cAAc;oBACd,kBAAkB;oBAClB,eAAe;oBACf,cAAc;oBACd,aAAa;oBACb,iBAAiB;oBACjB,aAAa;oBACb,eAAe;oBACf,cAAc;oBACd,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uBAAuB;oBACvB,qBAAqB;oBACrB,oBAAoB;iBACrB;aACF;;;AC7DD;;;;ACAA;;;;;;"}