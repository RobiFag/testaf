{"version":3,"file":"stamtech-datatable-utils.umd.js","sources":["../../../projects/datatable-utils/src/lib/components/column-selector/column-selector.component.ts","../../../projects/datatable-utils/src/lib/shared/datatable.types.ts","../../../projects/datatable-utils/src/lib/services/column-filter.service.ts","../../../projects/datatable-utils/src/lib/components/chips-filter/chips-filter.component.ts","../../../projects/datatable-utils/src/lib/components/dialog-filter/dialog-filter.component.ts","../../../projects/datatable-utils/src/lib/shared/datatable.column.ts","../../../projects/datatable-utils/src/lib/services/columns-manager.service.ts","../../../projects/datatable-utils/src/lib/services/datatable.service.interface.ts","../../../projects/datatable-utils/src/lib/shared/datatable.datasource.ts","../../../projects/datatable-utils/src/lib/datatable-utils.module.ts","../../../projects/datatable-utils/src/public-api.ts","../../../projects/datatable-utils/src/stamtech-datatable-utils.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { DatatableColumn } from '../../shared/datatable.column';\r\n\r\n@Component({\r\n  selector: 'column-selector',\r\n  templateUrl: './column-selector.component.html',\r\n  styleUrls: ['./column-selector.component.scss']\r\n})\r\nexport class ColumnSelectorComponent implements OnInit {\r\n  menuVisible = false;\r\n  @Input() columns: DatatableColumn[] = [];\r\n  @Output() columnsChange = new EventEmitter<DatatableColumn[]>();\r\n  @Input() selectedColumns: string[] = [];\r\n  @Output() selectedColumnsChange = new EventEmitter<string[]>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  toggleSelector() {\r\n    this.menuVisible = !this.menuVisible;\r\n  }\r\n\r\n  // On backdrop click close the menu and send selectedColumnsChange event\r\n  closeMenu() {\r\n      this.menuVisible = false;\r\n      this.selectedColumnsChange.emit(this.selectedColumns);\r\n  }\r\n\r\n  // After drop the array is reordered\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    const previousColumn = this.columns[event.previousIndex];\r\n    const currentColumn = this.columns[event.currentIndex];\r\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\r\n    const previousSelectIndex = this.selectedColumns.indexOf(previousColumn.key);\r\n    const currentSelectIndex = this.selectedColumns.indexOf(currentColumn.key);\r\n    if (previousSelectIndex!=-1 && currentSelectIndex!=-1) {\r\n      moveItemInArray(this.selectedColumns, previousSelectIndex, currentSelectIndex);\r\n    }\r\n  }\r\n}\r\n","import { HttpParams } from \"@angular/common/http\";\r\n\r\nexport class Filter {\r\n    key: string;\r\n    label: string;\r\n    type: FilterType;\r\n    options?: FilterOption[];\r\n    value?: any = null;\r\n    disabled?: boolean = false;\r\n\r\n    constructor(key: string, label: string, type: FilterType, options?: (string | FilterOption)[]) {\r\n        this.key = key;\r\n        this.label = label;\r\n        this.type = type;\r\n\r\n        if (options)\r\n            this.options = options.map((value : string | FilterOption) => {\r\n                if (typeof value === 'string') {\r\n                    return { id: value, label: value}\r\n                }\r\n                return value;\r\n            })\r\n    }\r\n}\r\n\r\nexport enum FilterType {\r\n    TEXT = \"TEXT\",\r\n    SELECT = \"SELECT\",\r\n    DATE = \"DATE\"\r\n}\r\n\r\nexport type FilterOption = { id:string | number, label:string }\r\n\r\n/**\r\n * Track the current datatable filter status with :\r\n * - an array of applicable filters with their value\r\n * - the current pagination status\r\n * - the current sort field\r\n */\r\nexport class FilterSet {\r\n    // Applicable filters\r\n    filters: {[id: string]: Filter} = {}\r\n\r\n    // Pagination\r\n    limit: number = 10;\r\n    page: number = null; // Zero based\r\n    \r\n    // Sorting\r\n    sortField: string = null;\r\n    sortDirection: string = 'Desc';\r\n    \r\n\r\n    find(key) { return this.filters[key]; }\r\n\r\n    add(filter: Filter) { this.filters[filter.key] = filter; }\r\n\r\n    remove(key:string) { delete this.filters[key]; }\r\n\r\n    isActive() { return this.getActiveFilters().length>0; }\r\n\r\n    clear() { \r\n        Object.keys(this.filters).forEach(key => {\r\n            this.filters[key].value = null;\r\n        })\r\n    }\r\n\r\n    reset() { this.filters = {}; }\r\n\r\n\r\n    getActiveFilters() {\r\n        return Object.values(this.filters).filter(f => (f.value!==null && f.value!==undefined))\r\n    }\r\n\r\n    getParams(): HttpParams {\r\n        console.log(this)\r\n        let params = new HttpParams();\r\n        if (this.page !== null) {\r\n            params = params.append('page', this.page.toString());\r\n            params = params.append('limit', this.limit.toString());\r\n        }\r\n        if (this.sortField) {\r\n            params = params.append('sort', this.sortField.toString());\r\n            params = params.append('direction', this.sortDirection.toString());\r\n        }\r\n        if (this.filters) {\r\n            this.getActiveFilters().forEach((filter: Filter) => \r\n                params = params.append(filter.key, filter.value)\r\n            );\r\n        }\r\n        return params;\r\n    }\r\n\r\n    setSort(field, direction) {\r\n        this.sortField = field;\r\n        this.sortDirection = direction;\r\n        this.resetPage();\r\n    }\r\n\r\n    resetPage() { \r\n        if (this.page) this.page = 0;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Filter, FilterOption, FilterSet, FilterType } from '../shared/datatable.types';\r\n\r\nexport class ColumnFilterService {\r\n  \r\n  private filterSet = new FilterSet();\r\n  private filterSetSubject = new BehaviorSubject<FilterSet>(this.filterSet);\r\n  filterSet$ = this.filterSetSubject.asObservable();\r\n  \r\n  constructor() { }\r\n\r\n  emitFilters() { this.filterSetSubject.next(this.filterSet); }\r\n\r\n  // Filters methods  \r\n  addFilter(key: string, label: string, type: FilterType, options?: (string | FilterOption)[]) {\r\n    this.filterSet.add(new Filter(key, label, type, options));\r\n    this.emitFilters();\r\n  }\r\n\r\n  removeFilter(key: string) {  \r\n    this.filterSet.remove(key);   \r\n    this.emitFilters();\r\n  }\r\n\r\n  setFilter(key: string, value: any) {\r\n    let filter = this.filterSet.find(key);\r\n    if (filter) {\r\n      filter.value = value;\r\n      this.emitFilters();\r\n    }\r\n  }\r\n\r\n  clearFilter(key: string) {  this.setFilter(key, null);   }\r\n\r\n  updateFilters(filterSet: FilterSet) { \r\n    this.filterSet = filterSet;\r\n    this.emitFilters();\r\n  }\r\n\r\n  isActive(): boolean { \r\n    return this.filterSet.isActive() \r\n  }\r\n\r\n  disableFilter(key: string) {\r\n    let filter = this.filterSet.find(key);\r\n    if (filter) {\r\n      filter.disabled = true;\r\n      this.emitFilters();\r\n    }\r\n  }\r\n\r\n  enableFilter(key: string) {\r\n    let filter = this.filterSet.find(key);\r\n    if (filter) {\r\n      filter.disabled = false;\r\n      this.emitFilters();\r\n    }\r\n  }\r\n\r\n  clearFilters() { \r\n    this.filterSet.clear(); \r\n    this.emitFilters();\r\n  }\r\n\r\n  // Paging methods\r\n  setPage(page:number, limit?:number) { \r\n    this.filterSet.page = page; \r\n    if (limit) this.filterSet.limit = limit; \r\n    this.emitFilters();\r\n  }\r\n\r\n  setLimit(limit:number) { \r\n    this.filterSet.limit = limit; \r\n    this.emitFilters();\r\n  }\r\n\r\n  // Sorting methods\r\n  setSort(field, direction) {\r\n    this.filterSet.sortField = field;\r\n    this.filterSet.sortDirection = direction;\r\n    this.emitFilters();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ColumnFilterService } from '../../services/column-filter.service';\r\nimport { Filter } from '../../shared/datatable.types';\r\n\r\n\r\n@Component({\r\n  selector: 'stam-chips-filter',\r\n  templateUrl: './chips-filter.component.html',\r\n  styleUrls: ['./chips-filter.component.scss']\r\n})\r\nexport class ChipsFilterComponent {\r\n  chips: Filter[] = [];\r\n  constructor(private filtersService: ColumnFilterService) { \r\n    this.filtersService.filterSet$\r\n      .subscribe(filterSet => this.chips = filterSet.getActiveFilters());\r\n  }\r\n\r\n  clear(key: string) { this.filtersService.clearFilter(key); }\r\n  clearFilters() { this.filtersService.clearFilters(); }\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ColumnFilterService } from '../../services/column-filter.service';\r\nimport { FilterSet } from '../../shared/datatable.types';\r\n\r\n@Component({\r\n  selector: 'app-dialog-filter',\r\n  templateUrl: './dialog-filter.component.html',\r\n  styles: [ \".mat-form-field { width: 100% }\"]\r\n})\r\nexport class DialogFilterComponent {\r\n  filterSet: FilterSet;\r\n  filtersForm = new FormGroup({});\r\n  filtersService: ColumnFilterService;\r\n\r\n  constructor(private dialog: MatDialogRef<DialogFilterComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.filtersService = data.filtersService;\r\n    this.filtersService.filterSet$.subscribe(filterSet => {\r\n      this.filterSet = filterSet;\r\n      Object.keys(this.filterSet.filters).forEach(key => \r\n        this.filtersForm.addControl(key, new FormControl({ value: this.filterSet.filters[key].value, disabled: this.filterSet.filters[key].disabled})));\r\n    });\r\n  }\r\n\r\n  clearFilters() {\r\n    this.filtersForm.reset();\r\n  }\r\n\r\n  search() {\r\n    Object.keys(this.filtersForm.controls).forEach(control => {\r\n      const filter = this.filterSet.find(control);\r\n      if (filter)\r\n        filter.value = this.filtersForm.controls[control].value;\r\n    });\r\n    this.filterSet.resetPage()\r\n    this.filtersService.updateFilters(this.filterSet);\r\n    this.dialog.close();\r\n  }\r\n\r\n}","export class DatatableColumn {\r\n    key: string;\r\n    label: string;\r\n\r\n    // Visible status on table first render\r\n    visible?: boolean;\r\n\r\n    // Key for sorting on backend\r\n    sortable?: string;\r\n\r\n    // Disabled in column selector \r\n    locked?: boolean;\r\n\r\n    // Skipped if is content is rendered in a custom ng-template\r\n    customContent?: boolean;\r\n\r\n    constructor(key: string, label: string) {\r\n        this.key = key;\r\n        this.label = label;\r\n        this.visible = true;\r\n        this.locked = false;\r\n        this.customContent = false;\r\n        this.sortable = key;\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { DatatableColumn } from \"../shared/datatable.column\";\r\n\r\nexport class ColumnsManagerService {\r\n    private columns: { [id: string] : DatatableColumn; } = {}\r\n\r\n    constructor() {}\r\n\r\n    addColumn(key: string, label: string) { \r\n        this.columns[key] = new DatatableColumn(key,label); \r\n    }\r\n\r\n    setVisible(keys: string[], value = true)  { keys.forEach(k => { this.columns[k].visible = value }); }\r\n    setLocked(keys: string[], value = true)   { keys.forEach(k => { this.columns[k].locked = value }); }\r\n    setCustom(keys: string[], value = true)   { keys.forEach(k => { this.columns[k].customContent = value }); }\r\n    setSortable(keys: string[], sortKey = \"\") { keys.forEach(k => { this.columns[k].sortable = sortKey }); }\r\n\r\n    // Get all columns\r\n    getColumns() { \r\n        return Object.values(this.columns);\r\n    }\r\n\r\n    // Get only visible columns\r\n    getDisplayedColumns() { \r\n        return Object.values(this.columns).filter(c => c.visible).map(c => c.key);\r\n    }\r\n\r\n    // Get only standard columns ( the content is simply the value )\r\n    getStandardColumns() { \r\n        return Object.values(this.columns).filter(c => !c.customContent);\r\n    }\r\n}","import { Observable } from \"rxjs\";\r\nimport { FilterSet } from \"../shared/datatable.types\";\r\n\r\nexport interface DatatableService<T> {\r\n    findAll(filterSet: FilterSet): Observable<RowsResponse<T>>\r\n}\r\n\r\nexport class RowsResponse<T> {\r\n    content: T[] = []\r\n    totalElements: number = 0;\r\n}","import { CollectionViewer, DataSource } from \"@angular/cdk/collections\"\r\nimport { BehaviorSubject, Observable, of } from \"rxjs\";\r\nimport { catchError, finalize } from \"rxjs/operators\";\r\nimport { FilterSet } from \"./datatable.types\";\r\nimport { DatatableService, RowsResponse } from \"../services/datatable.service.interface\";\r\n\r\n\r\nexport class DatatableDatasource<T> implements DataSource<T> {\r\n    private rows = new BehaviorSubject<T[]>([]);\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n    public loading$ = this.loadingSubject.asObservable();\r\n    private countSubject = new BehaviorSubject<number>(0);\r\n    public counter$ = this.countSubject.asObservable();\r\n    \r\n    constructor(private rowsService: DatatableService<T>) { }\r\n    \r\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\r\n        return this.rows.asObservable();\r\n    }\r\n\r\n    disconnect(collectionViewer: CollectionViewer): void {\r\n        this.rows.complete();\r\n        this.loadingSubject.complete();\r\n        this.countSubject.complete();\r\n    }\r\n\r\n    loadData(filterSet: FilterSet) {\r\n        this.loadingSubject.next(true);\r\n        this.rowsService.findAll(filterSet)\r\n            .pipe(\r\n                catchError(() => of(new RowsResponse<T>())),\r\n                finalize(() => this.loadingSubject.next(false))\r\n            )\r\n            .subscribe((result: RowsResponse<T>) => {\r\n                this.rows.next(result.content);\r\n                this.countSubject.next(result.totalElements);\r\n            });\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\n\r\nimport { ChipsFilterComponent } from './components/chips-filter/chips-filter.component';\r\nimport { DialogFilterComponent } from './components/dialog-filter/dialog-filter.component';\r\nimport { ColumnSelectorComponent } from './components/column-selector/column-selector.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ColumnSelectorComponent, \r\n    DialogFilterComponent, \r\n    ChipsFilterComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    //MatBadgeModule,\r\n    MatButtonModule,\r\n    //MatTooltipModule,\r\n    //MatToolbarModule,\r\n    OverlayModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSelectModule,\r\n    DragDropModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatChipsModule,\r\n    MatProgressBarModule\r\n  ],\r\n  exports: [\r\n    ColumnSelectorComponent,\r\n    DialogFilterComponent,\r\n    ChipsFilterComponent\r\n  ]\r\n})\r\nexport class StamDatatableModule { }\r\n","/*\r\n * Public API Surface of datatable-utils\r\n */\r\n\r\nexport * from './lib/components/column-selector/column-selector.component';\r\nexport * from './lib/components/chips-filter/chips-filter.component';\r\nexport * from './lib/components/dialog-filter/dialog-filter.component';\r\nexport * from './lib/services/columns-manager.service';\r\nexport * from './lib/services/column-filter.service';\r\nexport * from './lib/services/datatable.service.interface';\r\nexport * from './lib/shared/datatable.types';\r\nexport * from './lib/shared/datatable.datasource';\r\nexport * from './lib/shared/datatable.column';\r\nexport * from './lib/datatable-utils.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","moveItemInArray","Component","Input","Output","FilterType","HttpParams","BehaviorSubject","FormGroup","FormControl","MatDialogRef","Inject","MAT_DIALOG_DATA","catchError","of","finalize","NgModule","CommonModule","MatDatepickerModule","MatInputModule","FormsModule","ReactiveFormsModule","MatMenuModule","MatIconModule","MatButtonModule","OverlayModule","MatTableModule","MatPaginatorModule","MatSelectModule","DragDropModule","MatListModule","MatCheckboxModule","MatSortModule","MatDialogModule","MatChipsModule","MatProgressBarModule"],"mappings":"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"}